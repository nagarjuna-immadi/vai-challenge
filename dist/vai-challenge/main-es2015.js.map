{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/bar-chart/bar-chart.component.ts","./src/app/bar-chart/bar-chart.component.html","./src/app/circle-chart/circle-chart.component.ts","./src/app/circle-chart/circle-chart.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/services/api.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n","<app-dashboard></app-dashboard>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { CircleChartComponent } from './circle-chart/circle-chart.component';\nimport { BarChartComponent } from './bar-chart/bar-chart.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    ProfileComponent,\n    CircleChartComponent,\n    BarChartComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    NgxChartsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Metric, ChartData } from '../models/user.interface';\n\n@Component({\n  selector: 'app-bar-chart',\n  templateUrl: './bar-chart.component.html',\n  styleUrls: ['./bar-chart.component.scss']\n})\nexport class BarChartComponent implements OnInit {\n\n  @Input() \n  metrics: Metric[];\n\n  @Output()\n  selectedYear = new EventEmitter();\n\n  chartData: ChartData[];\n\n  view: any[] = [700, 400];\n\n  // options\n  showXAxis: boolean = true;\n  showYAxis: boolean = true;\n  gradient: boolean = false;\n  showLegend: boolean = true;\n  showXAxisLabel: boolean = true;\n  yAxisLabel: string = 'Year';\n  showYAxisLabel: boolean = true;\n  xAxisLabel: string = 'Units';\n\n  colorScheme = {\n    domain: ['#5AA454', '#E44D25', '#CFC0BB', '#7aa3e5', '#a8385d', '#aae3f5']\n  };\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.chartData = this.metrics.map(metric => ({\n      name: (metric.year).toString(),\n      value: metric.units\n    }));\n    this.chartData;\n  }\n\n  onSelect(data): void {\n    this.selectedYear.emit(Number(data.name));\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"p-2\">\n            <ngx-charts-bar-horizontal\n                [view]=\"view\"\n                [scheme]=\"colorScheme\"\n                [results]=\"chartData\"\n                [gradient]=\"gradient\"\n                [xAxis]=\"showXAxis\"\n                [yAxis]=\"showYAxis\"\n                [showXAxisLabel]=\"showXAxisLabel\"\n                [showYAxisLabel]=\"showYAxisLabel\"\n                [xAxisLabel]=\"xAxisLabel\"\n                [yAxisLabel]=\"yAxisLabel\"\n                (select)=\"onSelect($event)\">\n            </ngx-charts-bar-horizontal>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { Metric, ChartData } from '../models/user.interface';\n\n@Component({\n  selector: 'app-circle-chart',\n  templateUrl: './circle-chart.component.html',\n  styleUrls: ['./circle-chart.component.scss']\n})\nexport class CircleChartComponent implements OnInit, OnChanges {\n\n  @Input()\n  yearMetric: Metric;\n\n  chartData: ChartData[];\n\n  view: any[] = [600, 200];\n\n  colorScheme = {\n    domain: ['#FFA500', '#808080', '#1974D2']\n  };\n\n  constructor() { }\n\n  ngOnChanges(): void {\n    this.updateChartData();\n  }\n\n  ngOnInit(): void {\n    this.updateChartData();\n  }\n\n  updateChartData() {\n    this.chartData = [{\n      name: this.getName(this.yearMetric.orange_metric),\n      value: this.yearMetric.orange_metric\n    },{\n      name: this.getName(this.yearMetric.gray_metric),\n      value: this.yearMetric.gray_metric\n    },{\n      name: this.getName(this.yearMetric.blue_metric),\n      value: this.yearMetric.blue_metric\n    }];\n  }\n\n  getName(decimal: number): string {\n    return (decimal*100).toString()+'%'\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"p-2\">\n            <p class=\"px-4\"><b>Year: </b> {{yearMetric.year}}</p>\n            <ngx-charts-pie-grid\n                [view]=\"view\"\n                [scheme]=\"colorScheme\"\n                [results]=\"chartData\">\n            </ngx-charts-pie-grid>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../services/api.service';\nimport { User, Metric } from '../models/user.interface';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  profileData: User;\n  userMetrics: Metric[];\n  selectedMetric: Metric;\n\n  constructor(private apiService: ApiService) { }\n\n  ngOnInit(): void {\n    this.apiService.getUser().subscribe((data: User) => {\n      this.profileData = this.getProfileData(data);\n      this.userMetrics = data.metrics;\n      this.selectedMetric = this.userMetrics[0];\n    });\n  }\n\n  getProfileData(user: User) {\n    let profile = {\n      ...user\n    };\n    delete profile.metrics;\n\n    return profile;\n  }\n\n  yearChanged(year: number) {\n    this.selectedMetric = this.userMetrics.find(element => element.year == year);\n  }\n}\n","<div class=\"container-fluid px-0 dashboard-container\">\n    <div class=\"row no-gutters\">\n        <div class=\"col-3\">\n            <app-profile *ngIf=\"profileData\" [profile]=\"profileData\"></app-profile>\n        </div>\n        <div class=\"col-9 charts-container\" *ngIf=\"userMetrics\">\n            <h4 class=\"text-right px-2 py-3 bg-light\">Dashboard</h4>\n            <app-circle-chart [yearMetric]=\"selectedMetric\"></app-circle-chart>\n            <app-bar-chart [metrics]=\"userMetrics\" (selectedYear)=\"yearChanged($event)\"></app-bar-chart>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  @Input() profile;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"profile\">\n    <div class=\"card bg-light mb-3\">\n        <div class=\"card-body text-center\">\n            <img src=\"../../assets/profile.png\" />\n            <h5 class=\"card-title\">{{profile.name}}</h5>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <p class=\"px-2\"><b>Saldo: </b> {{profile.saldo}}</p>\n            <p class=\"px-2\"><b>Sent: </b> {{profile.sent}}</p>\n            <p class=\"px-2\"><b>Overdue: </b> {{profile.overdue}}</p>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../models/user.interface';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  api: string = 'assets/mock-data.json';\n\n  constructor(private http: HttpClient) { }\n\n  getUser(): Observable<User> {\n    return this.http.get(this.api).pipe(\n      map(data => data as User)\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}