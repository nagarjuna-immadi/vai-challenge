{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/bar-chart/bar-chart.component.ts","webpack:///src/app/bar-chart/bar-chart.component.html","webpack:///src/app/circle-chart/circle-chart.component.ts","webpack:///src/app/circle-chart/circle-chart.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/services/api.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BarChartComponent","selectedYear","view","showXAxis","showYAxis","gradient","showLegend","showXAxisLabel","yAxisLabel","showYAxisLabel","xAxisLabel","colorScheme","domain","chartData","metrics","map","metric","name","year","toString","value","units","data","emit","Number","onSelect","CircleChartComponent","updateChartData","getName","yearMetric","orange_metric","gray_metric","blue_metric","decimal","DashboardComponent","apiService","getUser","subscribe","profileData","getProfileData","userMetrics","selectedMetric","user","profile","find","element","ProfileComponent","ApiService","http","api","get","pipe","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,EAAvB;;QAMaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBC,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBF,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaM,Y;;;;;uBAAAA,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;;;;;;;;sEDOaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA8BaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAPJ,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,4FAJO,EAKP,oEALO,CAOI;;;;0HAGFA,S,EAAS;AAAA,uBAhBlB,2DAgBkB,EAflB,iFAekB,EAdlB,2EAckB,EAblB,yFAakB,EAZlB,iFAYkB;AAZD,kBAGjB,uEAHiB,EAIjB,oEAJiB,EAKjB,qEALiB,EAMjB,4FANiB,EAOjB,oEAPiB;AAYC,O;AALH,K;;;;;sEAKNA,S,EAAS;cAlBrB,sDAkBqB;eAlBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,iFAFY,EAGZ,2EAHY,EAIZ,yFAJY,EAKZ,iFALY,CADN;AAQRN,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,4FAJO,EAKP,oEALO,CARD;AAeRO,mBAAS,EAAE,EAfH;AAgBRC,mBAAS,EAAE,CAAC,2DAAD;AAhBH,S;AAkBY,Q;;;;;;;;;;;;;;;;;;AC9BtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,iB;AA0BX,mCAAc;AAAA;;AApBd,aAAAC,YAAA,GAAe,IAAI,0DAAJ,EAAf;AAIA,aAAAC,IAAA,GAAc,CAAC,GAAD,EAAM,GAAN,CAAd,CAgBc,CAdd;;AACA,aAAAC,SAAA,GAAqB,IAArB;AACA,aAAAC,SAAA,GAAqB,IAArB;AACA,aAAAC,QAAA,GAAoB,KAApB;AACA,aAAAC,UAAA,GAAsB,IAAtB;AACA,aAAAC,cAAA,GAA0B,IAA1B;AACA,aAAAC,UAAA,GAAqB,MAArB;AACA,aAAAC,cAAA,GAA0B,IAA1B;AACA,aAAAC,UAAA,GAAqB,OAArB;AAEA,aAAAC,WAAA,GAAc;AACZC,gBAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD;AADI,SAAd;AAIiB;;;;mCAET;AACN,eAAKC,SAAL,GAAiB,KAAKC,OAAL,CAAaC,GAAb,CAAiB,UAAAC,MAAM;AAAA,mBAAK;AAC3CC,kBAAI,EAAGD,MAAM,CAACE,IAAR,CAAcC,QAAd,EADqC;AAE3CC,mBAAK,EAAEJ,MAAM,CAACK;AAF6B,aAAL;AAAA,WAAvB,CAAjB;AAIA,eAAKR,SAAL;AACD;;;iCAEQS,I,EAAI;AACX,eAAKrB,YAAL,CAAkBsB,IAAlB,CAAuBC,MAAM,CAACF,IAAI,CAACL,IAAN,CAA7B;AACD;;;;;;;uBAtCUjB,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,oC;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,c;AAAA,+L;AAAA;AAAA;ACR9B;;AACI;;AACI;;AACI;;AAWI;AAAA,mBAAU,IAAAyB,QAAA,QAAV;AAA0B,WAA1B;;AACJ;;AACJ;;AACJ;;AACJ;;;;AAdgB;;AAAA,qFAAa,QAAb,EAAa,eAAb,EAAa,SAAb,EAAa,aAAb,EAAa,UAAb,EAAa,YAAb,EAAa,OAAb,EAAa,aAAb,EAAa,OAAb,EAAa,aAAb,EAAa,gBAAb,EAAa,kBAAb,EAAa,gBAAb,EAAa,kBAAb,EAAa,YAAb,EAAa,cAAb,EAAa,YAAb,EAAa,cAAb;;;;;;;;;sEDIHzB,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTP,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKmB,Q;;;;gBAE3B;;;gBAGA;;;;;;;;;;;;;;;;;;;;AEbH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQa+B,oB;AAaX,sCAAc;AAAA;;AANd,aAAAxB,IAAA,GAAc,CAAC,GAAD,EAAM,GAAN,CAAd;AAEA,aAAAS,WAAA,GAAc;AACZC,gBAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB;AADI,SAAd;AAIiB;;;;sCAEN;AACT,eAAKe,eAAL;AACD;;;mCAEO;AACN,eAAKA,eAAL;AACD;;;0CAEiB;AAChB,eAAKd,SAAL,GAAiB,CAAC;AAChBI,gBAAI,EAAE,KAAKW,OAAL,CAAa,KAAKC,UAAL,CAAgBC,aAA7B,CADU;AAEhBV,iBAAK,EAAE,KAAKS,UAAL,CAAgBC;AAFP,WAAD,EAGf;AACAb,gBAAI,EAAE,KAAKW,OAAL,CAAa,KAAKC,UAAL,CAAgBE,WAA7B,CADN;AAEAX,iBAAK,EAAE,KAAKS,UAAL,CAAgBE;AAFvB,WAHe,EAMf;AACAd,gBAAI,EAAE,KAAKW,OAAL,CAAa,KAAKC,UAAL,CAAgBG,WAA7B,CADN;AAEAZ,iBAAK,EAAE,KAAKS,UAAL,CAAgBG;AAFvB,WANe,CAAjB;AAUD;;;gCAEOC,O,EAAe;AACrB,iBAAO,CAACA,OAAO,GAAC,GAAT,EAAcd,QAAd,KAAyB,GAAhC;AACD;;;;;;;uBAtCUO,oB;AAAoB,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA,O;AAAA,oF;AAAA,c;AAAA,a;AAAA,oG;AAAA;AAAA;ACRjC;;AACI;;AACI;;AACI;;AAAgB;;AAAG;;AAAM;;AAAK;;AAAmB;;AACjD;;AAKJ;;AACJ;;AACJ;;;;AAR0C;;AAAA;;AAE1B;;AAAA,qFAAa,QAAb,EAAa,eAAb,EAAa,SAAb,EAAa,aAAb;;;;;;;;;sEDGHA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTjC,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;gBAE9B;;;;;;;;;;;;;;;;;;;;AEVH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGY;;;;;;AAAiC;;;;;;;;AAErC;;AACI;;AAA0C;;AAAS;;AACnD;;AACA;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AAAqC;;AAChF;;;;;;AAFsB;;AAAA;;AACH;;AAAA;;;;QDCduC,kB;AAMX,kCAAoBC,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAA2B;;;;mCAEvC;AAAA;;AACN,eAAKA,UAAL,CAAgBC,OAAhB,GAA0BC,SAA1B,CAAoC,UAACf,IAAD,EAAgB;AAClD,iBAAI,CAACgB,WAAL,GAAmB,KAAI,CAACC,cAAL,CAAoBjB,IAApB,CAAnB;AACA,iBAAI,CAACkB,WAAL,GAAmBlB,IAAI,CAACR,OAAxB;AACA,iBAAI,CAAC2B,cAAL,GAAsB,KAAI,CAACD,WAAL,CAAiB,CAAjB,CAAtB;AACD,WAJD;AAKD;;;uCAEcE,I,EAAY;AACzB,cAAIC,OAAO,GAAG,MAAH,OAAG,CAAH,EAAG,EACTD,IADS,CAAd;AAGA,iBAAOC,OAAO,CAAC7B,OAAf;AAEA,iBAAO6B,OAAP;AACD;;;oCAEWzB,I,EAAc;AACxB,eAAKuB,cAAL,GAAsB,KAAKD,WAAL,CAAiBI,IAAjB,CAAsB,UAAAC,OAAO;AAAA,mBAAIA,OAAO,CAAC3B,IAAR,IAAgBA,IAApB;AAAA,WAA7B,CAAtB;AACD;;;;;;;uBA3BUgB,kB,EAAkB,iI;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,c;AAAA,a;AAAA,4U;AAAA;AAAA;ACT/B;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAKJ;;AACJ;;;;AARyB;;AAAA;;AAEmB;;AAAA;;;;;;;;;sEDI/BA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTzC,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;AET/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOamD,gB;AAIX,kCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBAPUA,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,kC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,gM;AAAA;AAAA;ACP7B;;AACI;;AACI;;AACI;;AACA;;AAAuB;;AAAgB;;AAC3C;;AACJ;;AACA;;AACI;;AACI;;AAAgB;;AAAG;;AAAO;;AAAK;;AAAiB;;AAChD;;AAAgB;;AAAG;;AAAM;;AAAK;;AAAgB;;AAC9C;;AAAgB;;AAAG;;AAAS;;AAAK;;AAAmB;;AACxD;;AACJ;;AACJ;;;;AAVmC;;AAAA;;AAKQ;;AAAA;;AACD;;AAAA;;AACG;;AAAA;;;;;;;;sEDJhCA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTrD,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q;;;;gBAE1B;;;;;;;;;;;;;;;;;;;;AETH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaoD,U;AAIX,0BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAFpB,aAAAC,GAAA,GAAc,uBAAd;AAEyC;;;;kCAElC;AACL,iBAAO,KAAKD,IAAL,CAAUE,GAAV,CAAc,KAAKD,GAAnB,EAAwBE,IAAxB,CACL,2DAAI,UAAA7B,IAAI;AAAA,mBAAIA,IAAJ;AAAA,WAAR,CADK,CAAP;AAGD;;;;;;;uBAVUyB,U,EAAU,uH;AAAA,K;;;aAAVA,U;AAAU,eAAVA,UAAU,K;AAAA,kBAFT;;;;;sEAEDA,U,EAAU;cAHtB,wDAGsB;eAHX;AACVK,oBAAU,EAAE;AADF,S;AAGW,Q;;;;;;;;;;;;;;;;;;;;;;ACTvB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n","<app-dashboard></app-dashboard>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { CircleChartComponent } from './circle-chart/circle-chart.component';\nimport { BarChartComponent } from './bar-chart/bar-chart.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    ProfileComponent,\n    CircleChartComponent,\n    BarChartComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    NgxChartsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Metric, ChartData } from '../models/user.interface';\n\n@Component({\n  selector: 'app-bar-chart',\n  templateUrl: './bar-chart.component.html',\n  styleUrls: ['./bar-chart.component.scss']\n})\nexport class BarChartComponent implements OnInit {\n\n  @Input() \n  metrics: Metric[];\n\n  @Output()\n  selectedYear = new EventEmitter();\n\n  chartData: ChartData[];\n\n  view: any[] = [700, 400];\n\n  // options\n  showXAxis: boolean = true;\n  showYAxis: boolean = true;\n  gradient: boolean = false;\n  showLegend: boolean = true;\n  showXAxisLabel: boolean = true;\n  yAxisLabel: string = 'Year';\n  showYAxisLabel: boolean = true;\n  xAxisLabel: string = 'Units';\n\n  colorScheme = {\n    domain: ['#5AA454', '#E44D25', '#CFC0BB', '#7aa3e5', '#a8385d', '#aae3f5']\n  };\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.chartData = this.metrics.map(metric => ({\n      name: (metric.year).toString(),\n      value: metric.units\n    }));\n    this.chartData;\n  }\n\n  onSelect(data): void {\n    this.selectedYear.emit(Number(data.name));\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"p-2\">\n            <ngx-charts-bar-horizontal\n                [view]=\"view\"\n                [scheme]=\"colorScheme\"\n                [results]=\"chartData\"\n                [gradient]=\"gradient\"\n                [xAxis]=\"showXAxis\"\n                [yAxis]=\"showYAxis\"\n                [showXAxisLabel]=\"showXAxisLabel\"\n                [showYAxisLabel]=\"showYAxisLabel\"\n                [xAxisLabel]=\"xAxisLabel\"\n                [yAxisLabel]=\"yAxisLabel\"\n                (select)=\"onSelect($event)\">\n            </ngx-charts-bar-horizontal>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { Metric, ChartData } from '../models/user.interface';\n\n@Component({\n  selector: 'app-circle-chart',\n  templateUrl: './circle-chart.component.html',\n  styleUrls: ['./circle-chart.component.scss']\n})\nexport class CircleChartComponent implements OnInit, OnChanges {\n\n  @Input()\n  yearMetric: Metric;\n\n  chartData: ChartData[];\n\n  view: any[] = [600, 200];\n\n  colorScheme = {\n    domain: ['#FFA500', '#808080', '#1974D2']\n  };\n\n  constructor() { }\n\n  ngOnChanges(): void {\n    this.updateChartData();\n  }\n\n  ngOnInit(): void {\n    this.updateChartData();\n  }\n\n  updateChartData() {\n    this.chartData = [{\n      name: this.getName(this.yearMetric.orange_metric),\n      value: this.yearMetric.orange_metric\n    },{\n      name: this.getName(this.yearMetric.gray_metric),\n      value: this.yearMetric.gray_metric\n    },{\n      name: this.getName(this.yearMetric.blue_metric),\n      value: this.yearMetric.blue_metric\n    }];\n  }\n\n  getName(decimal: number): string {\n    return (decimal*100).toString()+'%'\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"p-2\">\n            <p class=\"px-4\"><b>Year: </b> {{yearMetric.year}}</p>\n            <ngx-charts-pie-grid\n                [view]=\"view\"\n                [scheme]=\"colorScheme\"\n                [results]=\"chartData\">\n            </ngx-charts-pie-grid>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../services/api.service';\nimport { User, Metric } from '../models/user.interface';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  profileData: User;\n  userMetrics: Metric[];\n  selectedMetric: Metric;\n\n  constructor(private apiService: ApiService) { }\n\n  ngOnInit(): void {\n    this.apiService.getUser().subscribe((data: User) => {\n      this.profileData = this.getProfileData(data);\n      this.userMetrics = data.metrics;\n      this.selectedMetric = this.userMetrics[0];\n    });\n  }\n\n  getProfileData(user: User) {\n    let profile = {\n      ...user\n    };\n    delete profile.metrics;\n\n    return profile;\n  }\n\n  yearChanged(year: number) {\n    this.selectedMetric = this.userMetrics.find(element => element.year == year);\n  }\n}\n","<div class=\"container-fluid px-0 dashboard-container\">\n    <div class=\"row no-gutters\">\n        <div class=\"col-3\">\n            <app-profile *ngIf=\"profileData\" [profile]=\"profileData\"></app-profile>\n        </div>\n        <div class=\"col-9 charts-container\" *ngIf=\"userMetrics\">\n            <h4 class=\"text-right px-2 py-3 bg-light\">Dashboard</h4>\n            <app-circle-chart [yearMetric]=\"selectedMetric\"></app-circle-chart>\n            <app-bar-chart [metrics]=\"userMetrics\" (selectedYear)=\"yearChanged($event)\"></app-bar-chart>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  @Input() profile;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"profile\">\n    <div class=\"card bg-light mb-3\">\n        <div class=\"card-body text-center\">\n            <img src=\"../../assets/profile.png\" />\n            <h5 class=\"card-title\">{{profile.name}}</h5>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <p class=\"px-2\"><b>Saldo: </b> {{profile.saldo}}</p>\n            <p class=\"px-2\"><b>Sent: </b> {{profile.sent}}</p>\n            <p class=\"px-2\"><b>Overdue: </b> {{profile.overdue}}</p>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../models/user.interface';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  api: string = 'assets/mock-data.json';\n\n  constructor(private http: HttpClient) { }\n\n  getUser(): Observable<User> {\n    return this.http.get(this.api).pipe(\n      map(data => data as User)\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}